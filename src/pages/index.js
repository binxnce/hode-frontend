import { useContext, useEffect } from "react";
import Head from "next/head";
import { useEthers } from "@usedapp/core";
import detectEthereumProvider from "@metamask/detect-provider";
//
import { AppContext } from "../hooks/context";
//
export default function Home() {
  const { walletState, walletActions } = useContext(AppContext);
  const { activateBrowserWallet, account, deactivate } = useEthers();

  const _handleActivateWallet = () => {
    activateBrowserWallet();
  };

  const _handleInActivateWallet = () => {
    walletActions.unsetWalletAddress();
    deactivate();
  };

  useEffect(() => {
    const { walletAddress } = walletState;

    if (account && !walletAddress) {
      walletActions.setWalletAddress({
        walletAddress: account,
      });
    }
  });

  const { walletAddress } = walletState;

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <button
          suppressHydrationWarning
          onClick={
            walletAddress ? _handleInActivateWallet : _handleActivateWallet
          }
        >
          {walletAddress
            ? walletAddress.slice(0, 4) +
              "..." +
              walletAddress.slice(
                walletAddress.length - 6,
                walletAddress.length
              )
            : "Connect Wallet"}
        </button>
      </div>
    </div>
  );
}
